Для запуска программы необходимо запустить модуль Input.py. При запуске модуля включается интерактивный режим, при
котором считываются строки из stdin до тех пор, пока не будет сгенерировано исключение KeyBoardInterrupt. Для каждой
считанной строки создаётся объект parser класса Parser, который хранит в себе массив с распарсенной строкой. После этого
создаётся объект analizator класса Analizator, конструктор которого принимает объект parser; analizator хранит в себе
дерево комманд, которое создаётся в конструкторе на основе parser, в узлах которого находятся пайпы и комманды. Объект
analizator содержит метод run(), который запускает выполение считанной команды, записанной в дерево. Выполнение
начинается с самого левого листа, затем его результат приписывается в качестве аргумента правому ребёнку родителя. Как
только доходим до самого правого листа, результат выводится в stdout. Для каждой команды создан одноимённый модуль (за
исключение pwd, так как случается конфликт имён, поэтому для pwd был создан pwd1.py), содержащий одноимённый метод,
возвращающий ожидаемый результат (exit ничего не возвращает, просто генерирует исключение KeyBoardInterrupt).
Был добавлен grep, подключен к схеме как и остальные команды.
Для парсинга командной строки были рассмотрены 3 библиотеки: argparse, getopt и optparse. Была выбрана библиотека
argparse по ряду причин: 1). argparse умеет обрабатывать позиционные аргументы, а 2 остальные не могут
2). argparse позволяет легко определять, какие символы являются параметрами, а какие нет
3). после испытания всех 3-х библиотек argparse показался мне более наглядным